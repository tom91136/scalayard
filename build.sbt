
lazy val scalaYard = Project(
	id = "scalayard",
	base = file("."))
	.settings(
		name := "scalayard",
		version := "0.1.0-SNAPSHOT",
		scalaVersion := "2.12.6",
		scalacOptions ++= Seq(
			"-target:jvm-1.8",
			"-encoding", "UTF-8",
			"-unchecked",
			"-deprecation",
			"-explaintypes",
			"-feature",
			"-Xfuture",

			"-language:existentials",
			"-language:experimental.macros",
			"-language:higherKinds",
			"-language:postfixOps",
			"-language:implicitConversions",

			"-Xlint:adapted-args",
			"-Xlint:by-name-right-associative",
			"-Xlint:constant",
			"-Xlint:delayedinit-select",
			"-Xlint:doc-detached",
			"-Xlint:inaccessible",
			"-Xlint:infer-any",
			"-Xlint:missing-interpolator",
			"-Xlint:nullary-override",
			"-Xlint:nullary-unit",
			"-Xlint:option-implicit",
			"-Xlint:package-object-classes",
			"-Xlint:poly-implicit-overload",
			"-Xlint:private-shadow",
			"-Xlint:stars-align",
			"-Xlint:type-parameter-shadow",
			"-Xlint:unsound-match",

			"-Yno-adapted-args",
			"-Ywarn-dead-code",
			"-Ywarn-extra-implicit",
			"-Ywarn-inaccessible",
			"-Ywarn-infer-any",
			"-Ywarn-nullary-override",
			"-Ywarn-nullary-unit",
			"-Ywarn-numeric-widen",
			"-Ywarn-unused:implicits",
			//		"-Ywarn-unused:imports",
			"-Ywarn-unused:locals",
			"-Ywarn-unused:params",
			"-Ywarn-unused:patvars",
			"-Ywarn-unused:privates",
			"-Ywarn-value-discard",
			"-Ypartial-unification",
		),
		javacOptions ++= Seq(
			"-target", "1.8",
			"-source", "1.8",
			"-Xlint:deprecation"),
		resolvers ++= Seq(
			Resolver.mavenLocal,
			Resolver.jcenterRepo,
			"Sonatype OSS Snapshots" at "https://oss.sonatype.org/content/repositories/snapshots"
		),
		mainClass in assembly := Some("uk.ac.bris.cs.Main"),
		libraryDependencies ++= Seq(
			"org.scalafx" %% "scalafx" % "8.0.144-R12",
			"org.scalafx" %% "scalafxml-core-sfx8" % "0.4",
			"org.scalafx" %% "scalafxml-macwire-sfx8" % "0.4",
			"net.kurobako.gesturefx" % "gesturefx" % "0.2.0",
		),
	)